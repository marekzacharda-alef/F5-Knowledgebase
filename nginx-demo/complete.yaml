---
#create PV volume for data -need to create on host "/data folder"
apiVersion: v1
kind: PersistentVolume
metadata:
  name: lms-data-pv-volume
  labels:
    type: local
spec:
  storageClassName: manual
  capacity:
    storage: 10Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/data"
---
#create PV volume for conf -need to create on host "/config folder"
apiVersion: v1
kind: PersistentVolume
metadata:
  name: lms-conf-pv-volume
  labels:
    type: local
spec:
  storageClassName: manual
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/config/conf.d"
---
#create PV volume for conf -need to create on host "/config/pass folder"
apiVersion: v1
kind: PersistentVolume
metadata:
  name: lms-conf-pass-pv-volume
  labels:
    type: local
spec:
  storageClassName: manual
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/config/pass"
---
---
#create PV volume for conf -need to create on host "/config/log folder"
apiVersion: v1
kind: PersistentVolume
metadata:
  name: lms-conf-log-pv-volume
  labels:
    type: local
spec:
  storageClassName: manual
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/config/log"
---


#create PV Volume Claim for data
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: lms-data-pv-claim
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 3Gi
---
#create PV Volume Claim for conf
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: lms-conf-pv-claim
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
#create PV Volume Claim for conf-pass
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: lms-conf-pass-pv-claim
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
#create PV Volume Claim for conf-log
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: lms-conf-log-pv-claim
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---

#create pods
apiVersion: v1
kind: Pod
metadata:
  name: lms-pv-pod
  labels: 
    app: nginx
spec:
  volumes:
    - name: lms-data-pv-storage
      persistentVolumeClaim:
        claimName: lms-data-pv-claim
    - name: lms-conf-pv-storage
      persistentVolumeClaim:
        claimName: lms-conf-pv-claim
    - name: lms-conf-pass-pv-storage
      persistentVolumeClaim:
        claimName: lms-conf-pass-pv-claim
    - name: lms-conf-log-pv-storage
      persistentVolumeClaim:
        claimName: lms-conf-log-pv-claim
  containers:
    - name: lms-pv-container
      image: nginx
      ports:
        - containerPort: 80
#          name: "http-server"
      volumeMounts:
        - mountPath: "/usr/share/nginx/html/files"
          name: lms-data-pv-storage
        - mountPath: "/etc/nginx/conf.d"
          name: lms-conf-pv-storage
        - mountPath: "/etc/nginx/pass"
          name: lms-conf-pass-pv-storage
        - mountPath: "/etc/nginx/logs"
          name: lms-conf-log-pv-storage
---
kind: Service
apiVersion: v1
metadata:
  name: nginx
spec:
  type: NodePort
  selector:
    app: nginx
  ports:
  - name: http
    port: 80
    targetPort: 80
---
#ingress 
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: lmsfiles-nginx-ingress
spec:
  rules:
  - host: demofiles.xc.aleflab.hu
    http:
      paths:
      - path: /files
        pathType: Prefix
        backend:
          service:
            name: nginx
            port:
              number: 80
